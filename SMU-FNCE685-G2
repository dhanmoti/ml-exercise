{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "4f06b9d9",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2025-02-05T07:01:52.769725Z",
     "iopub.status.busy": "2025-02-05T07:01:52.769346Z",
     "iopub.status.idle": "2025-02-05T07:01:53.650197Z",
     "shell.execute_reply": "2025-02-05T07:01:53.649003Z"
    },
    "papermill": {
     "duration": 0.891659,
     "end_time": "2025-02-05T07:01:53.651931",
     "exception": false,
     "start_time": "2025-02-05T07:01:52.760272",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/credit-risk-dataset/credit_risk_dataset.csv\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "083b5942",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T07:01:53.665839Z",
     "iopub.status.busy": "2025-02-05T07:01:53.665321Z",
     "iopub.status.idle": "2025-02-05T07:01:55.116144Z",
     "shell.execute_reply": "2025-02-05T07:01:55.115032Z"
    },
    "papermill": {
     "duration": 1.459721,
     "end_time": "2025-02-05T07:01:55.118156",
     "exception": false,
     "start_time": "2025-02-05T07:01:53.658435",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# import necessary libraries\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.metrics import accuracy_score, classification_report"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "02c24337",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T07:01:55.132375Z",
     "iopub.status.busy": "2025-02-05T07:01:55.131857Z",
     "iopub.status.idle": "2025-02-05T07:01:55.246358Z",
     "shell.execute_reply": "2025-02-05T07:01:55.245424Z"
    },
    "papermill": {
     "duration": 0.123755,
     "end_time": "2025-02-05T07:01:55.248337",
     "exception": false,
     "start_time": "2025-02-05T07:01:55.124582",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# load data file\n",
    "df = pd.read_csv(\"/kaggle/input/credit-risk-dataset/credit_risk_dataset.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "4f436a8e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T07:01:55.262211Z",
     "iopub.status.busy": "2025-02-05T07:01:55.261884Z",
     "iopub.status.idle": "2025-02-05T07:01:55.290936Z",
     "shell.execute_reply": "2025-02-05T07:01:55.289857Z"
    },
    "papermill": {
     "duration": 0.037724,
     "end_time": "2025-02-05T07:01:55.292633",
     "exception": false,
     "start_time": "2025-02-05T07:01:55.254909",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>person_age</th>\n",
       "      <th>person_income</th>\n",
       "      <th>person_home_ownership</th>\n",
       "      <th>person_emp_length</th>\n",
       "      <th>loan_intent</th>\n",
       "      <th>loan_grade</th>\n",
       "      <th>loan_amnt</th>\n",
       "      <th>loan_int_rate</th>\n",
       "      <th>loan_status</th>\n",
       "      <th>loan_percent_income</th>\n",
       "      <th>cb_person_default_on_file</th>\n",
       "      <th>cb_person_cred_hist_length</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>22</td>\n",
       "      <td>59000</td>\n",
       "      <td>RENT</td>\n",
       "      <td>123.0</td>\n",
       "      <td>PERSONAL</td>\n",
       "      <td>D</td>\n",
       "      <td>35000</td>\n",
       "      <td>16.02</td>\n",
       "      <td>1</td>\n",
       "      <td>0.59</td>\n",
       "      <td>Y</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>21</td>\n",
       "      <td>9600</td>\n",
       "      <td>OWN</td>\n",
       "      <td>5.0</td>\n",
       "      <td>EDUCATION</td>\n",
       "      <td>B</td>\n",
       "      <td>1000</td>\n",
       "      <td>11.14</td>\n",
       "      <td>0</td>\n",
       "      <td>0.10</td>\n",
       "      <td>N</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>25</td>\n",
       "      <td>9600</td>\n",
       "      <td>MORTGAGE</td>\n",
       "      <td>1.0</td>\n",
       "      <td>MEDICAL</td>\n",
       "      <td>C</td>\n",
       "      <td>5500</td>\n",
       "      <td>12.87</td>\n",
       "      <td>1</td>\n",
       "      <td>0.57</td>\n",
       "      <td>N</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>23</td>\n",
       "      <td>65500</td>\n",
       "      <td>RENT</td>\n",
       "      <td>4.0</td>\n",
       "      <td>MEDICAL</td>\n",
       "      <td>C</td>\n",
       "      <td>35000</td>\n",
       "      <td>15.23</td>\n",
       "      <td>1</td>\n",
       "      <td>0.53</td>\n",
       "      <td>N</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>24</td>\n",
       "      <td>54400</td>\n",
       "      <td>RENT</td>\n",
       "      <td>8.0</td>\n",
       "      <td>MEDICAL</td>\n",
       "      <td>C</td>\n",
       "      <td>35000</td>\n",
       "      <td>14.27</td>\n",
       "      <td>1</td>\n",
       "      <td>0.55</td>\n",
       "      <td>Y</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>21</td>\n",
       "      <td>9900</td>\n",
       "      <td>OWN</td>\n",
       "      <td>2.0</td>\n",
       "      <td>VENTURE</td>\n",
       "      <td>A</td>\n",
       "      <td>2500</td>\n",
       "      <td>7.14</td>\n",
       "      <td>1</td>\n",
       "      <td>0.25</td>\n",
       "      <td>N</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>26</td>\n",
       "      <td>77100</td>\n",
       "      <td>RENT</td>\n",
       "      <td>8.0</td>\n",
       "      <td>EDUCATION</td>\n",
       "      <td>B</td>\n",
       "      <td>35000</td>\n",
       "      <td>12.42</td>\n",
       "      <td>1</td>\n",
       "      <td>0.45</td>\n",
       "      <td>N</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>24</td>\n",
       "      <td>78956</td>\n",
       "      <td>RENT</td>\n",
       "      <td>5.0</td>\n",
       "      <td>MEDICAL</td>\n",
       "      <td>B</td>\n",
       "      <td>35000</td>\n",
       "      <td>11.11</td>\n",
       "      <td>1</td>\n",
       "      <td>0.44</td>\n",
       "      <td>N</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>24</td>\n",
       "      <td>83000</td>\n",
       "      <td>RENT</td>\n",
       "      <td>8.0</td>\n",
       "      <td>PERSONAL</td>\n",
       "      <td>A</td>\n",
       "      <td>35000</td>\n",
       "      <td>8.90</td>\n",
       "      <td>1</td>\n",
       "      <td>0.42</td>\n",
       "      <td>N</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>21</td>\n",
       "      <td>10000</td>\n",
       "      <td>OWN</td>\n",
       "      <td>6.0</td>\n",
       "      <td>VENTURE</td>\n",
       "      <td>D</td>\n",
       "      <td>1600</td>\n",
       "      <td>14.74</td>\n",
       "      <td>1</td>\n",
       "      <td>0.16</td>\n",
       "      <td>N</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   person_age  person_income person_home_ownership  person_emp_length  \\\n",
       "0          22          59000                  RENT              123.0   \n",
       "1          21           9600                   OWN                5.0   \n",
       "2          25           9600              MORTGAGE                1.0   \n",
       "3          23          65500                  RENT                4.0   \n",
       "4          24          54400                  RENT                8.0   \n",
       "5          21           9900                   OWN                2.0   \n",
       "6          26          77100                  RENT                8.0   \n",
       "7          24          78956                  RENT                5.0   \n",
       "8          24          83000                  RENT                8.0   \n",
       "9          21          10000                   OWN                6.0   \n",
       "\n",
       "  loan_intent loan_grade  loan_amnt  loan_int_rate  loan_status  \\\n",
       "0    PERSONAL          D      35000          16.02            1   \n",
       "1   EDUCATION          B       1000          11.14            0   \n",
       "2     MEDICAL          C       5500          12.87            1   \n",
       "3     MEDICAL          C      35000          15.23            1   \n",
       "4     MEDICAL          C      35000          14.27            1   \n",
       "5     VENTURE          A       2500           7.14            1   \n",
       "6   EDUCATION          B      35000          12.42            1   \n",
       "7     MEDICAL          B      35000          11.11            1   \n",
       "8    PERSONAL          A      35000           8.90            1   \n",
       "9     VENTURE          D       1600          14.74            1   \n",
       "\n",
       "   loan_percent_income cb_person_default_on_file  cb_person_cred_hist_length  \n",
       "0                 0.59                         Y                           3  \n",
       "1                 0.10                         N                           2  \n",
       "2                 0.57                         N                           3  \n",
       "3                 0.53                         N                           2  \n",
       "4                 0.55                         Y                           4  \n",
       "5                 0.25                         N                           2  \n",
       "6                 0.45                         N                           3  \n",
       "7                 0.44                         N                           4  \n",
       "8                 0.42                         N                           2  \n",
       "9                 0.16                         N                           3  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# view the first 5 rows of data. Column loan_status = 1 > default\n",
    "df.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "01b19daf",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T07:01:55.306847Z",
     "iopub.status.busy": "2025-02-05T07:01:55.306480Z",
     "iopub.status.idle": "2025-02-05T07:01:55.343905Z",
     "shell.execute_reply": "2025-02-05T07:01:55.342843Z"
    },
    "papermill": {
     "duration": 0.046475,
     "end_time": "2025-02-05T07:01:55.345631",
     "exception": false,
     "start_time": "2025-02-05T07:01:55.299156",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>person_age</th>\n",
       "      <th>person_income</th>\n",
       "      <th>person_home_ownership</th>\n",
       "      <th>person_emp_length</th>\n",
       "      <th>loan_intent</th>\n",
       "      <th>loan_grade</th>\n",
       "      <th>loan_amnt</th>\n",
       "      <th>loan_int_rate</th>\n",
       "      <th>loan_status</th>\n",
       "      <th>loan_percent_income</th>\n",
       "      <th>cb_person_default_on_file</th>\n",
       "      <th>cb_person_cred_hist_length</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32576</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32577</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32578</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32579</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32580</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>28638 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       person_age  person_income  person_home_ownership  person_emp_length  \\\n",
       "0           False          False                  False              False   \n",
       "1           False          False                  False              False   \n",
       "2           False          False                  False              False   \n",
       "3           False          False                  False              False   \n",
       "4           False          False                  False              False   \n",
       "...           ...            ...                    ...                ...   \n",
       "32576       False          False                  False              False   \n",
       "32577       False          False                  False              False   \n",
       "32578       False          False                  False              False   \n",
       "32579       False          False                  False              False   \n",
       "32580       False          False                  False              False   \n",
       "\n",
       "       loan_intent  loan_grade  loan_amnt  loan_int_rate  loan_status  \\\n",
       "0            False       False      False          False        False   \n",
       "1            False       False      False          False        False   \n",
       "2            False       False      False          False        False   \n",
       "3            False       False      False          False        False   \n",
       "4            False       False      False          False        False   \n",
       "...            ...         ...        ...            ...          ...   \n",
       "32576        False       False      False          False        False   \n",
       "32577        False       False      False          False        False   \n",
       "32578        False       False      False          False        False   \n",
       "32579        False       False      False          False        False   \n",
       "32580        False       False      False          False        False   \n",
       "\n",
       "       loan_percent_income  cb_person_default_on_file  \\\n",
       "0                    False                      False   \n",
       "1                    False                      False   \n",
       "2                    False                      False   \n",
       "3                    False                      False   \n",
       "4                    False                      False   \n",
       "...                    ...                        ...   \n",
       "32576                False                      False   \n",
       "32577                False                      False   \n",
       "32578                False                      False   \n",
       "32579                False                      False   \n",
       "32580                False                      False   \n",
       "\n",
       "       cb_person_cred_hist_length  \n",
       "0                           False  \n",
       "1                           False  \n",
       "2                           False  \n",
       "3                           False  \n",
       "4                           False  \n",
       "...                           ...  \n",
       "32576                       False  \n",
       "32577                       False  \n",
       "32578                       False  \n",
       "32579                       False  \n",
       "32580                       False  \n",
       "\n",
       "[28638 rows x 12 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# drop Null values\n",
    "df = df.dropna()\n",
    "\n",
    "# Check for missing data\n",
    "missing_values = df.isnull()\n",
    "missing_values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "08a70816",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T07:01:55.360598Z",
     "iopub.status.busy": "2025-02-05T07:01:55.360207Z",
     "iopub.status.idle": "2025-02-05T07:01:55.371856Z",
     "shell.execute_reply": "2025-02-05T07:01:55.370897Z"
    },
    "papermill": {
     "duration": 0.020883,
     "end_time": "2025-02-05T07:01:55.373516",
     "exception": false,
     "start_time": "2025-02-05T07:01:55.352633",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "False"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().values.any()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "10269b12",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T07:01:55.389095Z",
     "iopub.status.busy": "2025-02-05T07:01:55.388713Z",
     "iopub.status.idle": "2025-02-05T07:01:55.428837Z",
     "shell.execute_reply": "2025-02-05T07:01:55.427746Z"
    },
    "papermill": {
     "duration": 0.049877,
     "end_time": "2025-02-05T07:01:55.430547",
     "exception": false,
     "start_time": "2025-02-05T07:01:55.380670",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>person_age</th>\n",
       "      <th>person_income</th>\n",
       "      <th>person_emp_length</th>\n",
       "      <th>loan_amnt</th>\n",
       "      <th>loan_int_rate</th>\n",
       "      <th>loan_status</th>\n",
       "      <th>loan_percent_income</th>\n",
       "      <th>cb_person_cred_hist_length</th>\n",
       "      <th>person_home_ownership_OTHER</th>\n",
       "      <th>person_home_ownership_OWN</th>\n",
       "      <th>...</th>\n",
       "      <th>loan_intent_MEDICAL</th>\n",
       "      <th>loan_intent_PERSONAL</th>\n",
       "      <th>loan_intent_VENTURE</th>\n",
       "      <th>loan_grade_B</th>\n",
       "      <th>loan_grade_C</th>\n",
       "      <th>loan_grade_D</th>\n",
       "      <th>loan_grade_E</th>\n",
       "      <th>loan_grade_F</th>\n",
       "      <th>loan_grade_G</th>\n",
       "      <th>cb_person_default_on_file_Y</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>22</td>\n",
       "      <td>59000</td>\n",
       "      <td>123.0</td>\n",
       "      <td>35000</td>\n",
       "      <td>16.02</td>\n",
       "      <td>1</td>\n",
       "      <td>0.59</td>\n",
       "      <td>3</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>21</td>\n",
       "      <td>9600</td>\n",
       "      <td>5.0</td>\n",
       "      <td>1000</td>\n",
       "      <td>11.14</td>\n",
       "      <td>0</td>\n",
       "      <td>0.10</td>\n",
       "      <td>2</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>25</td>\n",
       "      <td>9600</td>\n",
       "      <td>1.0</td>\n",
       "      <td>5500</td>\n",
       "      <td>12.87</td>\n",
       "      <td>1</td>\n",
       "      <td>0.57</td>\n",
       "      <td>3</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>23</td>\n",
       "      <td>65500</td>\n",
       "      <td>4.0</td>\n",
       "      <td>35000</td>\n",
       "      <td>15.23</td>\n",
       "      <td>1</td>\n",
       "      <td>0.53</td>\n",
       "      <td>2</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>24</td>\n",
       "      <td>54400</td>\n",
       "      <td>8.0</td>\n",
       "      <td>35000</td>\n",
       "      <td>14.27</td>\n",
       "      <td>1</td>\n",
       "      <td>0.55</td>\n",
       "      <td>4</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 23 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   person_age  person_income  person_emp_length  loan_amnt  loan_int_rate  \\\n",
       "0          22          59000              123.0      35000          16.02   \n",
       "1          21           9600                5.0       1000          11.14   \n",
       "2          25           9600                1.0       5500          12.87   \n",
       "3          23          65500                4.0      35000          15.23   \n",
       "4          24          54400                8.0      35000          14.27   \n",
       "\n",
       "   loan_status  loan_percent_income  cb_person_cred_hist_length  \\\n",
       "0            1                 0.59                           3   \n",
       "1            0                 0.10                           2   \n",
       "2            1                 0.57                           3   \n",
       "3            1                 0.53                           2   \n",
       "4            1                 0.55                           4   \n",
       "\n",
       "   person_home_ownership_OTHER  person_home_ownership_OWN  ...  \\\n",
       "0                        False                      False  ...   \n",
       "1                        False                       True  ...   \n",
       "2                        False                      False  ...   \n",
       "3                        False                      False  ...   \n",
       "4                        False                      False  ...   \n",
       "\n",
       "   loan_intent_MEDICAL  loan_intent_PERSONAL  loan_intent_VENTURE  \\\n",
       "0                False                  True                False   \n",
       "1                False                 False                False   \n",
       "2                 True                 False                False   \n",
       "3                 True                 False                False   \n",
       "4                 True                 False                False   \n",
       "\n",
       "   loan_grade_B  loan_grade_C  loan_grade_D  loan_grade_E  loan_grade_F  \\\n",
       "0         False         False          True         False         False   \n",
       "1          True         False         False         False         False   \n",
       "2         False          True         False         False         False   \n",
       "3         False          True         False         False         False   \n",
       "4         False          True         False         False         False   \n",
       "\n",
       "   loan_grade_G  cb_person_default_on_file_Y  \n",
       "0         False                         True  \n",
       "1         False                        False  \n",
       "2         False                        False  \n",
       "3         False                        False  \n",
       "4         False                         True  \n",
       "\n",
       "[5 rows x 23 columns]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# This data has categorical data such as ownership, load_intent, loan_grade, cb_person_default_on_file\n",
    "# One-Hot Encoding (pd.get_dummies)\n",
    "# Recommended when categorical values do not have a meaningful order (e.g., \"City: New York, London, Tokyo\").\n",
    "# Converts categories into binary columns.\n",
    "# So, we will covert ownership, load_intent, loan_grade, cb_person_default_on_file columns to one-hot encoding\n",
    "\n",
    "# ref: https://www.geeksforgeeks.org/ml-one-hot-encoding/\n",
    "\n",
    "# Identify categorical columns\n",
    "categorical_cols = df.select_dtypes(include=['object', 'category']).columns\n",
    "\n",
    "# One-Hot Encoding (Recommended for non-ordinal categorical variables)\n",
    "df = pd.get_dummies(df, columns=categorical_cols, drop_first=True)\n",
    "df.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "63339902",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T07:01:55.446278Z",
     "iopub.status.busy": "2025-02-05T07:01:55.445908Z",
     "iopub.status.idle": "2025-02-05T07:01:55.482326Z",
     "shell.execute_reply": "2025-02-05T07:01:55.481436Z"
    },
    "papermill": {
     "duration": 0.046277,
     "end_time": "2025-02-05T07:01:55.484258",
     "exception": false,
     "start_time": "2025-02-05T07:01:55.437981",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Scale numerical data\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "\n",
    "numerical_features = ['person_age', 'person_income', 'person_emp_length', 'loan_amnt', \n",
    "                      'loan_int_rate', 'loan_percent_income', 'cb_person_cred_hist_length']\n",
    "scaler = StandardScaler()\n",
    "df[numerical_features] = scaler.fit_transform(df[numerical_features])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "e50ed8ae",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T07:01:55.500524Z",
     "iopub.status.busy": "2025-02-05T07:01:55.500162Z",
     "iopub.status.idle": "2025-02-05T07:01:55.522986Z",
     "shell.execute_reply": "2025-02-05T07:01:55.521996Z"
    },
    "papermill": {
     "duration": 0.032761,
     "end_time": "2025-02-05T07:01:55.524754",
     "exception": false,
     "start_time": "2025-02-05T07:01:55.491993",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>person_age</th>\n",
       "      <th>person_income</th>\n",
       "      <th>person_emp_length</th>\n",
       "      <th>loan_amnt</th>\n",
       "      <th>loan_int_rate</th>\n",
       "      <th>loan_status</th>\n",
       "      <th>loan_percent_income</th>\n",
       "      <th>cb_person_cred_hist_length</th>\n",
       "      <th>person_home_ownership_OTHER</th>\n",
       "      <th>person_home_ownership_OWN</th>\n",
       "      <th>...</th>\n",
       "      <th>loan_intent_MEDICAL</th>\n",
       "      <th>loan_intent_PERSONAL</th>\n",
       "      <th>loan_intent_VENTURE</th>\n",
       "      <th>loan_grade_B</th>\n",
       "      <th>loan_grade_C</th>\n",
       "      <th>loan_grade_D</th>\n",
       "      <th>loan_grade_E</th>\n",
       "      <th>loan_grade_F</th>\n",
       "      <th>loan_grade_G</th>\n",
       "      <th>cb_person_default_on_file_Y</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>-0.907594</td>\n",
       "      <td>-0.122674</td>\n",
       "      <td>28.453433</td>\n",
       "      <td>4.003984</td>\n",
       "      <td>1.542164</td>\n",
       "      <td>1</td>\n",
       "      <td>3.952527</td>\n",
       "      <td>-0.691791</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>-1.066064</td>\n",
       "      <td>-0.914907</td>\n",
       "      <td>0.050866</td>\n",
       "      <td>-1.367627</td>\n",
       "      <td>0.031008</td>\n",
       "      <td>0</td>\n",
       "      <td>-0.653141</td>\n",
       "      <td>-0.939413</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>-0.432183</td>\n",
       "      <td>-0.914907</td>\n",
       "      <td>-0.911932</td>\n",
       "      <td>-0.656678</td>\n",
       "      <td>0.566725</td>\n",
       "      <td>1</td>\n",
       "      <td>3.764540</td>\n",
       "      <td>-0.691791</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>-0.749123</td>\n",
       "      <td>-0.018433</td>\n",
       "      <td>-0.189833</td>\n",
       "      <td>4.003984</td>\n",
       "      <td>1.297530</td>\n",
       "      <td>1</td>\n",
       "      <td>3.388567</td>\n",
       "      <td>-0.939413</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>-0.590653</td>\n",
       "      <td>-0.196445</td>\n",
       "      <td>0.772966</td>\n",
       "      <td>4.003984</td>\n",
       "      <td>1.000253</td>\n",
       "      <td>1</td>\n",
       "      <td>3.576554</td>\n",
       "      <td>-0.444169</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 23 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   person_age  person_income  person_emp_length  loan_amnt  loan_int_rate  \\\n",
       "0   -0.907594      -0.122674          28.453433   4.003984       1.542164   \n",
       "1   -1.066064      -0.914907           0.050866  -1.367627       0.031008   \n",
       "2   -0.432183      -0.914907          -0.911932  -0.656678       0.566725   \n",
       "3   -0.749123      -0.018433          -0.189833   4.003984       1.297530   \n",
       "4   -0.590653      -0.196445           0.772966   4.003984       1.000253   \n",
       "\n",
       "   loan_status  loan_percent_income  cb_person_cred_hist_length  \\\n",
       "0            1             3.952527                   -0.691791   \n",
       "1            0            -0.653141                   -0.939413   \n",
       "2            1             3.764540                   -0.691791   \n",
       "3            1             3.388567                   -0.939413   \n",
       "4            1             3.576554                   -0.444169   \n",
       "\n",
       "   person_home_ownership_OTHER  person_home_ownership_OWN  ...  \\\n",
       "0                        False                      False  ...   \n",
       "1                        False                       True  ...   \n",
       "2                        False                      False  ...   \n",
       "3                        False                      False  ...   \n",
       "4                        False                      False  ...   \n",
       "\n",
       "   loan_intent_MEDICAL  loan_intent_PERSONAL  loan_intent_VENTURE  \\\n",
       "0                False                  True                False   \n",
       "1                False                 False                False   \n",
       "2                 True                 False                False   \n",
       "3                 True                 False                False   \n",
       "4                 True                 False                False   \n",
       "\n",
       "   loan_grade_B  loan_grade_C  loan_grade_D  loan_grade_E  loan_grade_F  \\\n",
       "0         False         False          True         False         False   \n",
       "1          True         False         False         False         False   \n",
       "2         False          True         False         False         False   \n",
       "3         False          True         False         False         False   \n",
       "4         False          True         False         False         False   \n",
       "\n",
       "   loan_grade_G  cb_person_default_on_file_Y  \n",
       "0         False                         True  \n",
       "1         False                        False  \n",
       "2         False                        False  \n",
       "3         False                        False  \n",
       "4         False                         True  \n",
       "\n",
       "[5 rows x 23 columns]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "86fc3d9b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T07:01:55.541175Z",
     "iopub.status.busy": "2025-02-05T07:01:55.540850Z",
     "iopub.status.idle": "2025-02-05T07:01:55.547698Z",
     "shell.execute_reply": "2025-02-05T07:01:55.546808Z"
    },
    "papermill": {
     "duration": 0.016824,
     "end_time": "2025-02-05T07:01:55.549214",
     "exception": false,
     "start_time": "2025-02-05T07:01:55.532390",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Define independent variables (X) and target variable (y)\n",
    "# 'loan_status' is the column indicating default (1 = default, 0 = no default)\n",
    "X = df.drop(columns=['loan_status'])  # Drop the target column\n",
    "y = df['loan_status']  # Target variable"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "185bbaf4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T07:01:55.565661Z",
     "iopub.status.busy": "2025-02-05T07:01:55.565290Z",
     "iopub.status.idle": "2025-02-05T07:01:55.576429Z",
     "shell.execute_reply": "2025-02-05T07:01:55.575291Z"
    },
    "papermill": {
     "duration": 0.021317,
     "end_time": "2025-02-05T07:01:55.578203",
     "exception": false,
     "start_time": "2025-02-05T07:01:55.556886",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Split data into 50-50 train and test sets\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "51f50621",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T07:01:55.594988Z",
     "iopub.status.busy": "2025-02-05T07:01:55.594615Z",
     "iopub.status.idle": "2025-02-05T07:01:55.801862Z",
     "shell.execute_reply": "2025-02-05T07:01:55.800322Z"
    },
    "papermill": {
     "duration": 0.217836,
     "end_time": "2025-02-05T07:01:55.803659",
     "exception": false,
     "start_time": "2025-02-05T07:01:55.585823",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression()</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "LogisticRegression()"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Train a logistic regression model\n",
    "model = LogisticRegression()\n",
    "model.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "9f1c5f08",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T07:01:55.820752Z",
     "iopub.status.busy": "2025-02-05T07:01:55.820418Z",
     "iopub.status.idle": "2025-02-05T07:01:55.831476Z",
     "shell.execute_reply": "2025-02-05T07:01:55.830377Z"
    },
    "papermill": {
     "duration": 0.021228,
     "end_time": "2025-02-05T07:01:55.833017",
     "exception": false,
     "start_time": "2025-02-05T07:01:55.811789",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.8620810055865922"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Predict\n",
    "y_pred = model.predict(X_test)\n",
    "\n",
    "# Evaluate Model\n",
    "accuracy = accuracy_score(y_test, y_pred)\n",
    "\n",
    "accuracy"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "0e9fee2a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T07:01:55.852261Z",
     "iopub.status.busy": "2025-02-05T07:01:55.851875Z",
     "iopub.status.idle": "2025-02-05T07:01:56.582761Z",
     "shell.execute_reply": "2025-02-05T07:01:56.581635Z"
    },
    "papermill": {
     "duration": 0.741338,
     "end_time": "2025-02-05T07:01:56.584424",
     "exception": false,
     "start_time": "2025-02-05T07:01:55.843086",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 800x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Visualise\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "# Example: Count plot of a categorical column\n",
    "plt.figure(figsize=(8, 5))\n",
    "sns.countplot(x=df['person_home_ownership_OWN'])\n",
    "plt.title('Home ownership Distribution')\n",
    "plt.xticks(rotation=45)\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "26446fb4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T07:01:56.603090Z",
     "iopub.status.busy": "2025-02-05T07:01:56.602503Z",
     "iopub.status.idle": "2025-02-05T07:01:56.857013Z",
     "shell.execute_reply": "2025-02-05T07:01:56.855863Z"
    },
    "papermill": {
     "duration": 0.265817,
     "end_time": "2025-02-05T07:01:56.858678",
     "exception": false,
     "start_time": "2025-02-05T07:01:56.592861",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 800x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Scatter plot (if you have two numerical columns)\n",
    "plt.figure(figsize=(8, 5))\n",
    "sns.scatterplot(x=df['person_income'], y=df['loan_status'])\n",
    "plt.title(\"Income vs Value\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2d83da4e",
   "metadata": {
    "papermill": {
     "duration": 0.008563,
     "end_time": "2025-02-05T07:01:56.876237",
     "exception": false,
     "start_time": "2025-02-05T07:01:56.867674",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# From Week 3 sample code"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4eaa9429",
   "metadata": {
    "papermill": {
     "duration": 0.008498,
     "end_time": "2025-02-05T07:01:56.893657",
     "exception": false,
     "start_time": "2025-02-05T07:01:56.885159",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Remove outliers in terms of person_age"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "b2734f1c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T07:01:56.913733Z",
     "iopub.status.busy": "2025-02-05T07:01:56.913395Z",
     "iopub.status.idle": "2025-02-05T07:01:57.460341Z",
     "shell.execute_reply": "2025-02-05T07:01:57.459419Z"
    },
    "papermill": {
     "duration": 0.559873,
     "end_time": "2025-02-05T07:01:57.462268",
     "exception": false,
     "start_time": "2025-02-05T07:01:56.902395",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 800x300 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "# Copy original data to preserve it for \"before\" plot\n",
    "df_before = df.copy()\n",
    "\n",
    "# Identify outliers: person_age >= 120 \n",
    "outlier_indices = df_before[df_before['person_age'] >= 120].index\n",
    "\n",
    "# Remove those outliers to create 'after' set\n",
    "df_after = df_before.drop(outlier_indices)\n",
    "\n",
    "# Create a 1x2 subplot\n",
    "fig, axes = plt.subplots(nrows=1, ncols=2, figsize=(8, 3))\n",
    "\n",
    "# -- Plot 1: Before Outlier Removal\n",
    "axes[0].scatter(df_before['person_age'], \n",
    "                df_before['loan_int_rate'], \n",
    "                alpha=0.5, \n",
    "                color='blue')\n",
    "axes[0].set_title('Before Outlier Removal')\n",
    "axes[0].set_xlabel('Age')\n",
    "axes[0].set_ylabel('Loan Interest Rate (%)')\n",
    "axes[0].grid(True)\n",
    "\n",
    "# -- Plot 2: After Outlier Removal\n",
    "axes[1].scatter(df_after['person_age'], \n",
    "                df_after['loan_int_rate'], \n",
    "                alpha=0.5, \n",
    "                color='blue')\n",
    "axes[1].set_title('After Outlier Removal')\n",
    "axes[1].set_xlabel('Age')\n",
    "axes[1].set_ylabel('Loan Interest Rate (%)')\n",
    "axes[1].grid(True)\n",
    "\n",
    "plt.tight_layout()\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "487b7f39",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T07:01:57.484344Z",
     "iopub.status.busy": "2025-02-05T07:01:57.483993Z",
     "iopub.status.idle": "2025-02-05T07:01:58.171926Z",
     "shell.execute_reply": "2025-02-05T07:01:58.170382Z"
    },
    "papermill": {
     "duration": 0.702324,
     "end_time": "2025-02-05T07:01:58.174579",
     "exception": false,
     "start_time": "2025-02-05T07:01:57.472255",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 800x300 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df_before_2 = df_after.copy()\n",
    "\n",
    "# Identify outliers: person_age >= 120 \n",
    "outlier_indices = df_before_2[df_before_2['person_income'] >= 150000].index\n",
    "\n",
    "# Remove those outliers to create 'after' set\n",
    "df_after = df_after.drop(outlier_indices)\n",
    "\n",
    "# Create a 1x2 subplot\n",
    "fig, axes = plt.subplots(nrows=1, ncols=2, figsize=(8, 3))\n",
    "\n",
    "# -- Plot 3: Before Outlier Removal\n",
    "axes[0].scatter(df_before['person_income'], \n",
    "                df_before['loan_int_rate'], \n",
    "                alpha=0.5, \n",
    "                color='blue')\n",
    "axes[0].set_title('Before Outlier Removal')\n",
    "axes[0].set_xlabel('Income')\n",
    "axes[0].set_ylabel('Loan Interest Rate (%)')\n",
    "axes[0].grid(True)\n",
    "\n",
    "# -- Plot 4: After Outlier Removal - income\n",
    "axes[1].scatter(df_after['person_income'], \n",
    "                df_after['loan_int_rate'], \n",
    "                alpha=0.5, \n",
    "                color='blue')\n",
    "axes[1].set_title('After Outlier Removal')\n",
    "axes[1].set_xlabel('Income')\n",
    "axes[1].set_ylabel('Loan Interest Rate (%)')\n",
    "axes[1].grid(True)\n",
    "\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "fc1e6199",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T07:01:58.210664Z",
     "iopub.status.busy": "2025-02-05T07:01:58.210317Z",
     "iopub.status.idle": "2025-02-05T07:01:58.233236Z",
     "shell.execute_reply": "2025-02-05T07:01:58.232188Z"
    },
    "papermill": {
     "duration": 0.043508,
     "end_time": "2025-02-05T07:01:58.234752",
     "exception": false,
     "start_time": "2025-02-05T07:01:58.191244",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>person_age</th>\n",
       "      <th>person_income</th>\n",
       "      <th>person_emp_length</th>\n",
       "      <th>loan_amnt</th>\n",
       "      <th>loan_int_rate</th>\n",
       "      <th>loan_status</th>\n",
       "      <th>loan_percent_income</th>\n",
       "      <th>cb_person_cred_hist_length</th>\n",
       "      <th>person_home_ownership_OTHER</th>\n",
       "      <th>person_home_ownership_OWN</th>\n",
       "      <th>...</th>\n",
       "      <th>loan_intent_MEDICAL</th>\n",
       "      <th>loan_intent_PERSONAL</th>\n",
       "      <th>loan_intent_VENTURE</th>\n",
       "      <th>loan_grade_B</th>\n",
       "      <th>loan_grade_C</th>\n",
       "      <th>loan_grade_D</th>\n",
       "      <th>loan_grade_E</th>\n",
       "      <th>loan_grade_F</th>\n",
       "      <th>loan_grade_G</th>\n",
       "      <th>cb_person_default_on_file_Y</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>-0.907594</td>\n",
       "      <td>-0.122674</td>\n",
       "      <td>28.453433</td>\n",
       "      <td>4.003984</td>\n",
       "      <td>1.542164</td>\n",
       "      <td>1</td>\n",
       "      <td>3.952527</td>\n",
       "      <td>-0.691791</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>-1.066064</td>\n",
       "      <td>-0.914907</td>\n",
       "      <td>0.050866</td>\n",
       "      <td>-1.367627</td>\n",
       "      <td>0.031008</td>\n",
       "      <td>0</td>\n",
       "      <td>-0.653141</td>\n",
       "      <td>-0.939413</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>-0.432183</td>\n",
       "      <td>-0.914907</td>\n",
       "      <td>-0.911932</td>\n",
       "      <td>-0.656678</td>\n",
       "      <td>0.566725</td>\n",
       "      <td>1</td>\n",
       "      <td>3.764540</td>\n",
       "      <td>-0.691791</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>-0.749123</td>\n",
       "      <td>-0.018433</td>\n",
       "      <td>-0.189833</td>\n",
       "      <td>4.003984</td>\n",
       "      <td>1.297530</td>\n",
       "      <td>1</td>\n",
       "      <td>3.388567</td>\n",
       "      <td>-0.939413</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>-0.590653</td>\n",
       "      <td>-0.196445</td>\n",
       "      <td>0.772966</td>\n",
       "      <td>4.003984</td>\n",
       "      <td>1.000253</td>\n",
       "      <td>1</td>\n",
       "      <td>3.576554</td>\n",
       "      <td>-0.444169</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 23 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   person_age  person_income  person_emp_length  loan_amnt  loan_int_rate  \\\n",
       "0   -0.907594      -0.122674          28.453433   4.003984       1.542164   \n",
       "1   -1.066064      -0.914907           0.050866  -1.367627       0.031008   \n",
       "2   -0.432183      -0.914907          -0.911932  -0.656678       0.566725   \n",
       "3   -0.749123      -0.018433          -0.189833   4.003984       1.297530   \n",
       "4   -0.590653      -0.196445           0.772966   4.003984       1.000253   \n",
       "\n",
       "   loan_status  loan_percent_income  cb_person_cred_hist_length  \\\n",
       "0            1             3.952527                   -0.691791   \n",
       "1            0            -0.653141                   -0.939413   \n",
       "2            1             3.764540                   -0.691791   \n",
       "3            1             3.388567                   -0.939413   \n",
       "4            1             3.576554                   -0.444169   \n",
       "\n",
       "   person_home_ownership_OTHER  person_home_ownership_OWN  ...  \\\n",
       "0                        False                      False  ...   \n",
       "1                        False                       True  ...   \n",
       "2                        False                      False  ...   \n",
       "3                        False                      False  ...   \n",
       "4                        False                      False  ...   \n",
       "\n",
       "   loan_intent_MEDICAL  loan_intent_PERSONAL  loan_intent_VENTURE  \\\n",
       "0                False                  True                False   \n",
       "1                False                 False                False   \n",
       "2                 True                 False                False   \n",
       "3                 True                 False                False   \n",
       "4                 True                 False                False   \n",
       "\n",
       "   loan_grade_B  loan_grade_C  loan_grade_D  loan_grade_E  loan_grade_F  \\\n",
       "0         False         False          True         False         False   \n",
       "1          True         False         False         False         False   \n",
       "2         False          True         False         False         False   \n",
       "3         False          True         False         False         False   \n",
       "4         False          True         False         False         False   \n",
       "\n",
       "   loan_grade_G  cb_person_default_on_file_Y  \n",
       "0         False                         True  \n",
       "1         False                        False  \n",
       "2         False                        False  \n",
       "3         False                        False  \n",
       "4         False                         True  \n",
       "\n",
       "[5 rows x 23 columns]"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# categorical cols are already converted using one hot encoding\n",
    "df_after.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "d0b7252e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T07:01:58.258289Z",
     "iopub.status.busy": "2025-02-05T07:01:58.257922Z",
     "iopub.status.idle": "2025-02-05T07:01:58.264275Z",
     "shell.execute_reply": "2025-02-05T07:01:58.263498Z"
    },
    "papermill": {
     "duration": 0.019758,
     "end_time": "2025-02-05T07:01:58.265711",
     "exception": false,
     "start_time": "2025-02-05T07:01:58.245953",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Define independent variables (X) and target variable (y)\n",
    "# 'loan_status' is the column indicating default (1 = default, 0 = no default)\n",
    "X = df.drop(columns=['loan_status'])  # Drop the target column\n",
    "y = df['loan_status']  # Target variable"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "2918f6ec",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T07:01:58.288840Z",
     "iopub.status.busy": "2025-02-05T07:01:58.288420Z",
     "iopub.status.idle": "2025-02-05T07:01:58.299737Z",
     "shell.execute_reply": "2025-02-05T07:01:58.298964Z"
    },
    "papermill": {
     "duration": 0.024569,
     "end_time": "2025-02-05T07:01:58.301443",
     "exception": false,
     "start_time": "2025-02-05T07:01:58.276874",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Split data into 50-50 train and test sets\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "64ac20c9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T07:01:58.324649Z",
     "iopub.status.busy": "2025-02-05T07:01:58.324322Z",
     "iopub.status.idle": "2025-02-05T07:01:58.500886Z",
     "shell.execute_reply": "2025-02-05T07:01:58.499704Z"
    },
    "papermill": {
     "duration": 0.190049,
     "end_time": "2025-02-05T07:01:58.502739",
     "exception": false,
     "start_time": "2025-02-05T07:01:58.312690",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression()</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "LogisticRegression()"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Train a logistic regression model\n",
    "model = LogisticRegression()\n",
    "model.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "4de482c6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T07:01:58.526449Z",
     "iopub.status.busy": "2025-02-05T07:01:58.526106Z",
     "iopub.status.idle": "2025-02-05T07:01:58.535843Z",
     "shell.execute_reply": "2025-02-05T07:01:58.534785Z"
    },
    "papermill": {
     "duration": 0.023491,
     "end_time": "2025-02-05T07:01:58.537645",
     "exception": false,
     "start_time": "2025-02-05T07:01:58.514154",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Predict\n",
    "y_pred = model.predict(X_test)\n",
    "y_pred_proba = model.predict_proba(X_test)[:, 1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "cd3bd35c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T07:01:58.561363Z",
     "iopub.status.busy": "2025-02-05T07:01:58.561033Z",
     "iopub.status.idle": "2025-02-05T07:01:58.565283Z",
     "shell.execute_reply": "2025-02-05T07:01:58.564265Z"
    },
    "papermill": {
     "duration": 0.01795,
     "end_time": "2025-02-05T07:01:58.566901",
     "exception": false,
     "start_time": "2025-02-05T07:01:58.548951",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.metrics import (\n",
    "    accuracy_score,\n",
    "    precision_score,\n",
    "    recall_score,\n",
    "    f1_score,\n",
    "    confusion_matrix,\n",
    "    roc_curve,\n",
    "    auc,\n",
    "    classification_report\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "24cb7640",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T07:01:58.590795Z",
     "iopub.status.busy": "2025-02-05T07:01:58.590404Z",
     "iopub.status.idle": "2025-02-05T07:01:58.610799Z",
     "shell.execute_reply": "2025-02-05T07:01:58.609847Z"
    },
    "papermill": {
     "duration": 0.034086,
     "end_time": "2025-02-05T07:01:58.612456",
     "exception": false,
     "start_time": "2025-02-05T07:01:58.578370",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model Evaluation Metrics:\n",
      "Accuracy : 0.8621\n",
      "Precision: 0.7759\n",
      "Recall   : 0.5416\n",
      "F1 Score : 0.6379\n"
     ]
    }
   ],
   "source": [
    "# Evaluate the model\n",
    "accuracy = accuracy_score(y_test, y_pred)\n",
    "precision = precision_score(y_test, y_pred)\n",
    "recall = recall_score(y_test, y_pred)\n",
    "f1 = f1_score(y_test, y_pred)\n",
    "\n",
    "print(\"Model Evaluation Metrics:\")\n",
    "print(f\"Accuracy : {accuracy:.4f}\")\n",
    "print(f\"Precision: {precision:.4f}\")\n",
    "print(f\"Recall   : {recall:.4f}\")\n",
    "print(f\"F1 Score : {f1:.4f}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "cff9beb2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T07:01:58.636854Z",
     "iopub.status.busy": "2025-02-05T07:01:58.636454Z",
     "iopub.status.idle": "2025-02-05T07:01:58.847014Z",
     "shell.execute_reply": "2025-02-05T07:01:58.845918Z"
    },
    "papermill": {
     "duration": 0.224771,
     "end_time": "2025-02-05T07:01:58.848727",
     "exception": false,
     "start_time": "2025-02-05T07:01:58.623956",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 600x400 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Display the confusion matrix\n",
    "conf_matrix = confusion_matrix(y_test, y_pred)\n",
    "plt.figure(figsize=(6,4))\n",
    "sns.heatmap(conf_matrix, annot=True, fmt='d', cmap='Blues', \n",
    "            xticklabels=['Predicted Negative', 'Predicted Positive'], \n",
    "            yticklabels=['Actual Negative', 'Actual Positive'])\n",
    "plt.title('Confusion Matrix')\n",
    "plt.xlabel('Predicted')\n",
    "plt.ylabel('Actual')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "40e1eb1f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T07:01:58.874530Z",
     "iopub.status.busy": "2025-02-05T07:01:58.874156Z",
     "iopub.status.idle": "2025-02-05T07:01:58.894063Z",
     "shell.execute_reply": "2025-02-05T07:01:58.892977Z"
    },
    "papermill": {
     "duration": 0.034393,
     "end_time": "2025-02-05T07:01:58.895760",
     "exception": false,
     "start_time": "2025-02-05T07:01:58.861367",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Classification Report:\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.88      0.95      0.91      4443\n",
      "           1       0.78      0.54      0.64      1285\n",
      "\n",
      "    accuracy                           0.86      5728\n",
      "   macro avg       0.83      0.75      0.78      5728\n",
      "weighted avg       0.86      0.86      0.85      5728\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Classification report for detailed metrics\n",
    "print(\"Classification Report:\")\n",
    "print(classification_report(y_test, y_pred))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cdf1ce44",
   "metadata": {
    "papermill": {
     "duration": 0.01308,
     "end_time": "2025-02-05T07:01:58.920984",
     "exception": false,
     "start_time": "2025-02-05T07:01:58.907904",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Set threshold"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "20b1209d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T07:01:58.946360Z",
     "iopub.status.busy": "2025-02-05T07:01:58.946001Z",
     "iopub.status.idle": "2025-02-05T07:01:58.966183Z",
     "shell.execute_reply": "2025-02-05T07:01:58.965122Z"
    },
    "papermill": {
     "duration": 0.034956,
     "end_time": "2025-02-05T07:01:58.968088",
     "exception": false,
     "start_time": "2025-02-05T07:01:58.933132",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Performance Metrics at Threshold = 0.79:\n",
      "Accuracy : 0.8233\n",
      "Precision: 0.8934\n",
      "Recall   : 0.2412\n",
      "F1 Score : 0.3799\n"
     ]
    }
   ],
   "source": [
    "# Example of threshold impact on predictions\n",
    "threshold = 0.79\n",
    "y_pred_threshold = (y_pred_proba >= threshold).astype(int)\n",
    "\n",
    "# Evaluate performance at the chosen threshold\n",
    "accuracy = accuracy_score(y_test, y_pred_threshold)\n",
    "precision = precision_score(y_test, y_pred_threshold)\n",
    "recall = recall_score(y_test, y_pred_threshold)\n",
    "f1 = f1_score(y_test, y_pred_threshold)\n",
    "\n",
    "print(f\"Performance Metrics at Threshold = {threshold}:\")\n",
    "print(f\"Accuracy : {accuracy:.4f}\")\n",
    "print(f\"Precision: {precision:.4f}\")\n",
    "print(f\"Recall   : {recall:.4f}\")\n",
    "print(f\"F1 Score : {f1:.4f}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "d3af16e9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T07:01:58.994276Z",
     "iopub.status.busy": "2025-02-05T07:01:58.993888Z",
     "iopub.status.idle": "2025-02-05T07:01:59.272340Z",
     "shell.execute_reply": "2025-02-05T07:01:59.271358Z"
    },
    "papermill": {
     "duration": 0.293694,
     "end_time": "2025-02-05T07:01:59.274194",
     "exception": false,
     "start_time": "2025-02-05T07:01:58.980500",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 800x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# ROC Curve and AUC\n",
    "fpr, tpr, thresholds = roc_curve(y_test, y_pred_proba)\n",
    "roc_auc = auc(fpr, tpr)\n",
    "\n",
    "plt.figure(figsize=(8,6))\n",
    "plt.plot(fpr, tpr, color='darkorange', lw=2, label=f'ROC curve (AUC = {roc_auc:.4f})')\n",
    "plt.plot([0, 1], [0, 1], color='navy', lw=2, linestyle='--')\n",
    "\n",
    "# Define the thresholds you want to highlight\n",
    "desired_thresholds = [0.3, 0.5, 0.7]\n",
    "\n",
    "# Function to find the closest threshold\n",
    "def find_closest_threshold(thresholds, desired_thresh):\n",
    "    idx = np.argmin(np.abs(thresholds - desired_thresh))\n",
    "    return idx\n",
    "\n",
    "# Highlight specific threshold points\n",
    "for thresh in desired_thresholds:\n",
    "    idx = find_closest_threshold(thresholds, thresh)\n",
    "    plt.scatter(fpr[idx], tpr[idx], label=f'Threshold ≈ {thresholds[idx]:.2f}', marker='o')\n",
    "\n",
    "plt.xlim([-0.01, 1.0])\n",
    "plt.ylim([0.0, 1.05])\n",
    "plt.xlabel('False Positive Rate')\n",
    "plt.ylabel('True Positive Rate')\n",
    "plt.title('Receiver Operating Characteristic (ROC) Curve')\n",
    "plt.legend(loc=\"lower right\")\n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 688532,
     "sourceId": 1207035,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30839,
   "isGpuEnabled": false,
   "isInternetEnabled": false,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 9.967215,
   "end_time": "2025-02-05T07:02:00.009071",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-02-05T07:01:50.041856",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
